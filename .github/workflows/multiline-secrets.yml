# This is a basic workflow to help you get started with Actions

name: Multiline Secret CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: echo secret
        run: echo "${{ secrets.TEST_MULTILINE_SECRET }}"

      # Runs a set of commands using the runners shell
      - name: Set output
        id: set-output-1
        run: echo ::set-output name=one::"BEGIN/${{ secrets.TEST_MULTILINE_SECRET }}/END"
      
      - name: Set output
        id: set-output-2
        run: echo ::set-output name=two::"${{ secrets.TEST_MULTILINE_SECRET }}"
        
      - name: print one nothing
        run: echo "${{ steps.set-output-1.outputs.one }}"
        
      - name: print one with
        run: echo ${{ format('BEGIN/{0}/END', steps.set-output-1.outputs.one) }}
        
      - name: print two nothing
        run: echo "${{ steps.set-output-2.outputs.two }}"
        
      - name: print two with
        run: echo "${{ format('BEGIN/{0}/END', steps.set-output-2.outputs.two) }}"
        
      - name: base64 encode
        id: base64-encode
        run: |
          echo "${{ secrets.TEST_MULTILINE_SECRET }}" | base64
          echo ::set-output name=encoded::$(echo "${{ secrets.TEST_MULTILINE_SECRET }}" | base64)
        
      - name: base64 decode
        run: |
          echo "${{ secrets.TEST_MULTILINE_SECRET }}" | base64 | base64 --decode
          echo ${{ steps.base64-encode.outputs.encoded }} | base64 --decode
