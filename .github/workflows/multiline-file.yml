# This is a basic workflow to help you get started with Actions

name: Multiline File CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: create file
        run: echo "-- BEGIN RSA --\ntest-line-one\n-test-line-two\ntest-line-3\n--- END RSA ---" > t.txt
        
      - name: cat file
        run: cat t.txt
        
      - name: var1
        run: |
          VAR1=$(cat t.txt)
          echo $VAR1
          echo "$VAR1"
          
      - name: var2
        run: |
          echo VAR2=$(cat t.txt) >> $GITHUB_ENV
      
      - name: var 2 print
        run: |
          echo ${{ env.VAR2 }}
          echo "${{ env.VAR2 }}"
          echo ${{ format('{0}', env.VAR2) }}
          echo "${{ format('{0}', env.VAR2) }}"
          echo ${{ toJSON(env.VAR2) }}
          echo "${{ toJSON(env.VAR2) }}"
          echo ${{ toJSON(format('{0}', env.VAR2)) }}
          
      - name: secret print
        run: |
          echo ${{ secrets.TEST_MULTILINE_SECRET }}
          echo "${{ secrets.TEST_MULTILINE_SECRET }}"
          echo ${{ format('{0}', secrets.TEST_MULTILINE_SECRET) }}
          echo "${{ format('{0}', secrets.TEST_MULTILINE_SECRET) }}"
          echo ${{ toJSON(secrets.TEST_MULTILINE_SECRET) }}
          echo "${{ toJSON(secrets.TEST_MULTILINE_SECRET) }}"
          echo ${{ toJSON(format('{0}', secrets.TEST_MULTILINE_SECRET)) }}
          
      - name: secret as env print
        env: 
          VAR3: ${{ secrets.TEST_MULTILINE_SECRET }}
        run: |
          echo ${{ env.VAR3 }}
          echo "${{ env.VAR3 }}"
          echo ${{ format('{0}', env.VAR3) }}
          echo "${{ format('{0}', env.VAR3) }}"
          echo ${{ toJSON(env.VAR3) }}
          echo "${{ toJSON(env.VAR3) }}"
          echo ${{ toJSON(format('{0}', env.VAR3)) }}
          
      - name: secret as env print 2
        env: 
          VAR4: ${{ secrets.TEST_MULTILINE_SECRET }}
        run: |
          echo $VAR4
          echo "$VAR4"
        
